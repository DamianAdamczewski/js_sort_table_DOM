{"version":3,"sources":["scripts/main.js"],"names":["tableHeaders","document","querySelectorAll","tableRows","table","querySelector","sort","header","headerIndex","indexOf","target","sortedTable","a","b","textA","children","innerText","textB","isNaN","localeCompare","parseInt","replace","append","forEach","addEventListener"],"mappings":";AAAA,aA0BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBD,IAAMA,EAAeC,SAASC,iBAAiB,YACzCC,EAAYF,SAASC,iBAAiB,YACtCE,EAAQH,SAASI,cAAc,SAMrC,SAASC,EAAKC,GACNC,IAAAA,EAAc,EAAIR,GAAcS,QAAQF,EAAOG,QAE/CC,EAAc,EAAIR,GAAWG,KAAK,SAACM,EAAGC,GACpCC,IAAAA,EAAQF,EAAEG,SAASP,GAAaQ,UAChCC,EAAQJ,EAAEE,SAASP,GAAaQ,UAElCF,MAAa,MAAbA,EAAM,IAAeI,OAAOJ,GAKzBA,EAAMK,cAAcF,GAJlBG,SAASN,EAAMO,QAAQ,MAAO,KACnCD,SAASH,EAAMI,QAAQ,MAAO,OAMpCjB,EAAMkB,OAANlB,MAAAA,EAAgBO,EAAAA,IAnBlBX,EAAauB,QAAQ,SAAAhB,GACnBA,EAAOiB,iBAAiB,QAASlB","file":"main.4f70da6a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeaders = document.querySelectorAll('thead th');\nconst tableRows = document.querySelectorAll('tbody tr');\nconst table = document.querySelector('tbody');\n\ntableHeaders.forEach(header => {\n  header.addEventListener('click', sort);\n});\n\nfunction sort(header) {\n  const headerIndex = [...tableHeaders].indexOf(header.target);\n\n  const sortedTable = [...tableRows].sort((a, b) => {\n    const textA = a.children[headerIndex].innerText;\n    const textB = b.children[headerIndex].innerText;\n\n    if (textA[0] === '$' || !isNaN(+textA)) {\n      return parseInt(textA.replace(/\\D/g, ''))\n      - parseInt(textB.replace(/\\D/g, ''));\n    }\n\n    return textA.localeCompare(textB);\n  });\n\n  table.append(...sortedTable);\n};\n"]}